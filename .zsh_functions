# vim: set filetype=bash:
# typeset -F SECONDS
# function -record-start-time() {
#   emulate -L zsh
#   ZSH_START_TIME=${ZSH_START_TIME:-$SECONDS}
# }
# add-zsh-hook preexec -record-start-time
#
# function -report-start-time() {
#   emulate -L zsh
#   if [ $ZSH_START_TIME ]; then
#     local DELTA=$(($SECONDS - $ZSH_START_TIME))
#     local DAYS=$((~~($DELTA / 86400)))
#     local HOURS=$((~~(($DELTA - $DAYS * 86400) / 3600)))
#     local MINUTES=$((~~(($DELTA - $DAYS * 86400 - $HOURS * 3600) / 60)))
#     local SECS=$(($DELTA - $DAYS * 86400 - $HOURS * 3600 - $MINUTES * 60))
#     local ELAPSED=''
#     test "$DAYS" != '0' && ELAPSED="${DAYS}d"
#     test "$HOURS" != '0' && ELAPSED="${ELAPSED}${HOURS}h"
#     test "$MINUTES" != '0' && ELAPSED="${ELAPSED}${MINUTES}m"
#     if [ "$ELAPSED" = '' ]; then
#       SECS="$(print -f "%.2f" $SECS)s"
#     elif [ "$DAYS" != '0' ]; then
#       SECS=''
#     else
#       SECS="$((~~$SECS))s"
#     fi
#     ELAPSED="${ELAPSED}${SECS}"
#     export RPROMPT="%F{cyan}%{$__WINCENT[ITALIC_ON]%}${ELAPSED}%{$__WINCENT[ITALIC_OFF]%}%f $RPROMPT_BASE"
#     unset ZSH_START_TIME
#   else
#     export RPROMPT="$RPROMPT_BASE"
#   fi
# }
# add-zsh-hook precmd -report-start-time

function -auto-ls-after-cd() {
  emulate -L zsh
  # Only in response to a user-initiated `cd`, not indirectly (eg. via another
  # function).
  if [ "$ZSH_EVAL_CONTEXT" = "toplevel:shfunc" ]; then
    ls --color=auto
  fi
}
add-zsh-hook chpwd -auto-ls-after-cd

# mkdir with -p option and auto cd into the new directory
function take() {
  emulate -L zsh
  if [ $# -eq 0 ]; then
    echo "Usage: take <directory>"
    return 1
  fi
  mkdir -p "$1" && cd "$1"
}

function alidist_take() {
    target_dir=$(alidist_repo "$1" | grep "TARGET_DIR=" | cut -d= -f2)
    cd "$target_dir" || {
        echo "Failed to change directory to $target_dir"
        return 1
    }
}

